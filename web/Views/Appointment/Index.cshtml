@model PaginatedList<web.Models.Appointment>

@{
    ViewData["Title"] = "Index";
}
<h6 style="color:red;text-align:center">Key: OW= Outside Window for Employee, DB = Double Booked</h6>

@*<h1>Index</h1>*@

<p>
                @if(ViewBag.Employees.Count==0) @*if/else statement protects against 0 employees and crash*@
                {
                    <span title="No employees found, add an employee before creating an appointment">
                        <a asp-action="Create" asp-controller="Employee">Add an Employee before creating an appointment</a>
                    </span>
                }
                else
                {
                    <a asp-action="Create">Create New Appointment</a>
                }   


    
</p>
   <form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Search within Name, Phone Number, and Appointment Notes: <br/>
            <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a> 

        </p>
    </div>
</form>
<div style="color:red;"><text> Showing @Model.Count() Entries @{if(@ViewData["CurrentFilter"] == null) { <text>with no filters applied</text>}else{<text> with the filter set to '@ViewData["CurrentFilter"]' </text>}}  </text> </div>  
<table class="table">
    <thead>
        <tr>
            <th>
            </th> @*adds column for enumeration*@
            <th>
            <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>

            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PhoneNumberSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Phone Number</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["AppointmentNotesSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Appointment Notes</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["EmployeeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Employee</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["RequestedTimeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Appointment</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>

        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="7">
                    No records match search criteria
                </td>
            </tr>
        }
        else
        {
            var lineTracker = 1;
            @foreach (var item in Model) {
                    <tr>
                                <td>
                                    @lineTracker.

                                </td>
                                @{lineTracker++;}
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AppointmentNotes)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Employee.FullName)
                                </td>
                                <td>
                                    @{
                                        if((item.RequestedTime.TimeOfDay < item.Employee.StartTime.TimeOfDay) || (item.RequestedTime.TimeOfDay > item.Employee.EndTime.TimeOfDay))
                                        {
                                                <a><text style="color:red;">OW</text></a>                                 
                                        }
                                        var double_Booked = Model
                                            .Where(st=> st.RequestedTime==item.RequestedTime)
                                            .Where(st=> st.EmployeeId == item.EmployeeId);
                                        if(@double_Booked.Count()>1)
                                        {
                                            <a><text style="color:red;">DB</text></a>     
                                        }
                                    @Html.DisplayFor(modelItem => item.RequestedTime)
                                     }
                                </td>
                                <td>
                                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                                </td>
                    </tr>
            }
        }
    </tbody>
    
    </table>


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
